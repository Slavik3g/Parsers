version: '3'

services:
  web:
    build: .
    container_name: fast_api_web
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      cache:
        condition: service_started


  mongo:
    image: mongo:latest
    container_name: mongo
    env_file:
      - .env
    volumes:
      - mongo:/data/db
    ports:
      - '27017:27017'
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    container_name: zookeeper
    restart: unless-stopped
    ports:
    - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "zookeeper-shell", "zookeeper:2181", "ls", "/" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    restart: unless-stopped
    ports:
      - '9092:9092'
      - '9997:9997'
      - '29092:29092'
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 3

  cache:
    image: redis:6.2-alpine
    restart: unless-stopped
    container_name: cache
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data

volumes:
  mongo:
  cache: